
import java.awt.Dimension;
import java.awt.Graphics;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;


public final class TraCuu extends javax.swing.JFrame {
    private DefaultTableModel tableModel = new DefaultTableModel();
    KetNoi kn = new KetNoi();
    dataSql data = new dataSql();
    
    public TraCuu() {
        initComponents();
        btnXem.setEnabled(false);
        setLocationRelativeTo(null);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        pnlTracuu = new javax.swing.JPanel();
        pnl2 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon("src\\Images\\logo0.PNG");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        btnHome = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        pnlLogo = new javax.swing.JScrollPane();
        tblTracuu = new javax.swing.JTable();
        btnXem = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlTracuu.setBackground(new java.awt.Color(153, 204, 255));

        btnHome.setBackground(new java.awt.Color(153, 204, 255));
        btnHome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home.png"))); // NOI18N
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                .addContainerGap(637, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addContainerGap())
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addContainerGap())
        );

        txtTim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimActionPerformed(evt);
            }
        });

        btnTim.setBackground(new java.awt.Color(153, 204, 255));
        btnTim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search1.png"))); // NOI18N
        btnTim.setText("Search");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        tblTracuu = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int col){
                return false;
            }
        };
        tblTracuu.setBackground(new java.awt.Color(153, 204, 255));
        tblTracuu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Topic ID", "Topic name", "Topic type", "State", "Student"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblTracuu.setFocusable(false);
        tblTracuu.setGridColor(new java.awt.Color(153, 204, 255));
        tblTracuu.getTableHeader().setReorderingAllowed(false);
        tblTracuu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTracuuMouseClicked(evt);
            }
        });
        pnlLogo.setViewportView(tblTracuu);

        btnXem.setBackground(new java.awt.Color(153, 204, 255));
        btnXem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Details.png"))); // NOI18N
        btnXem.setText("Details");
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTracuuLayout = new javax.swing.GroupLayout(pnlTracuu);
        pnlTracuu.setLayout(pnlTracuuLayout);
        pnlTracuuLayout.setHorizontalGroup(
            pnlTracuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlTracuuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTracuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlLogo)
                    .addGroup(pnlTracuuLayout.createSequentialGroup()
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXem)))
                .addContainerGap())
        );
        pnlTracuuLayout.setVerticalGroup(
            pnlTracuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTracuuLayout.createSequentialGroup()
                .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(pnlTracuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTracuu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTracuu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        btnXem.setEnabled(false);
        kn.KN();
        try {
            DefaultTableModel tbModel = (DefaultTableModel) tblTracuu.getModel();
            while (tbModel.getRowCount() > 0) {
                tbModel.removeRow(0);
            }
            if( txtTim.getText().equals("")){
                ResultSet sv = KetNoi.s.executeQuery("select DETAI.maDT, tenDT,loaiDT, tinhTrang, tenSV from DETAI, NHOM, SINHVIEN where SINHVIEN.maSV = NHOM.maSV and DETAI.maDT = NHOM.maDT and truongNhom = 'true'");
                while(sv.next()){
                    tbModel.addRow(new Object[] {sv.getInt(1), sv.getString(2),sv.getString(3), sv.getString(4), sv.getString(5)});
                }
            }
            else{
                ResultSet sv = KetNoi.s.executeQuery("select DETAI.maDT, tenDT, loaiDT, tinhTrang, p.tenSV from DETAI, NHOM, (select *  from SINHVIEN where freetext(*,'"+txtTim.getText()+"')) p where p.maSV = NHOM.maSV and DETAI.maDT = NHOM.maDT");
                while(sv.next()){
                    tbModel.addRow(new Object[] {sv.getInt(1), sv.getString(2),sv.getString(3), sv.getString(4), sv.getString(5)});
                }
                ResultSet detai = KetNoi.s.executeQuery("select p.maDT, tenDT, loaiDT, tinhTrang, tenSV from SINHVIEN, NHOM, (select *  from DETAI where freetext(*,'"+txtTim.getText()+"')) p where SINHVIEN.maSV = NHOM.maSV and p.maDT = NHOM.maDT and truongNhom = 'true'");
                if(tblTracuu.getRowCount() == 0){
                    while(detai.next()){
                        tbModel.addRow(new Object[] {detai.getInt(1), detai.getString(2), detai.getString(3), detai.getString(4), detai.getString(5)});
                    }
                }
                else{
                    while(detai.next()){
                        for( int i = 0; i < tblTracuu.getRowCount(); i++){
                            if( (int)tblTracuu.getValueAt(i, 0) == (int)detai.getInt(1)){
                            break;
                            }
                            else if(i == (tblTracuu.getRowCount() -1)){
                                tbModel.addRow(new Object[] {detai.getInt(1), detai.getString(2), detai.getString(3), detai.getString(4), detai.getString(5)});
                            }
                        }
                    }
                }
                ResultSet cb = KetNoi.s.executeQuery("select DETAI.maDT, tenDT, loaiDT, tinhTrang, tenSV from DETAI,DIEM, NHOM, SINHVIEN, (select *  from CANBO where freetext(*,'"+txtTim.getText()+"')) p where SINHVIEN.maSV = NHOM.maSV and DETAI.maDT = NHOM.maDT and p.maCB = DIEM.maCB and DIEM.maDT = DETAI.maDT and truongNhom = 'true'");
                if(tblTracuu.getRowCount() == 0){
                    while(cb.next()){
                        tbModel.addRow(new Object[] {cb.getInt(1), cb.getString(2), cb.getString(3), cb.getString(4), cb.getString(5)});
                    }
                }
                else{
                    while(cb.next()){
                        for( int i = 0; i <tblTracuu.getRowCount(); i++){
                            if( (int)tblTracuu.getValueAt(i, 0) == (int)cb.getInt(1)){
                                break;
                            }
                            else if( i == (tblTracuu.getRowCount() -1)){
                                tbModel.addRow(new Object[] {cb.getInt(1), cb.getString(2), cb.getString(3), cb.getString(4), cb.getString(5)});
                            }
                        }
                    }
                }
                ResultSet hocki = KetNoi.s.executeQuery("select distinct DETAI.maDT, tenDT, loaiDT, tinhTrang, tenSV from DETAI, NHOM, SINHVIEN,(select distinct maDT, diem, hocKi, namHoc from DIEM where hocKi like '%"+txtTim.getText()+"%' or namHoc like '%"+txtTim.getText()+"%')p where DETAI.maDT = NHOM.maDT and NHOM.maSV = SINHVIEN.maSV and DETAI.maDT = p.maDT and truongNhom = 'true'");
                if(tblTracuu.getRowCount() == 0){
                    while(hocki.next()){
                        tbModel.addRow(new Object[] {hocki.getInt(1), hocki.getString(2), hocki.getString(3), hocki.getString(4), hocki.getString(5)});
                    }
                }
                else{
                    while(hocki.next()){
                        for( int i = 0; i <tblTracuu.getRowCount(); i++){
                            if( (int)tblTracuu.getValueAt(i, 0) == (int)hocki.getInt(1)){
                                break;
                            }
                            else if(i == (tblTracuu.getRowCount() -1) ){
                                tbModel.addRow(new Object[] {hocki.getInt(1), hocki.getString(2), hocki.getString(3), hocki.getString(4), hocki.getString(5)});
                            }
                        }
                    }
                }
                ResultSet madetai = KetNoi.s.executeQuery("select distinct DETAI.maDT, tenDT, loaiDT, tinhTrang, tenSV from DETAI, NHOM, SINHVIEN,(select distinct maDT, diem from DIEM where maDT = "+Integer.parseInt(txtTim.getText())+" or diem = "+Float.parseFloat(txtTim.getText())+")p where DETAI.maDT = NHOM.maDT and NHOM.maSV = SINHVIEN.maSV and DETAI.maDT = p.maDT and truongNhom = 'true'");
                if(tblTracuu.getRowCount() == 0){
                    while(madetai.next()){
                        tbModel.addRow(new Object[] {madetai.getInt(1), madetai.getString(2), madetai.getString(3), madetai.getString(4), madetai.getString(5)});
                    }
                }
                else{
                    while(madetai.next()){
                        for( int i = 0; i <tblTracuu.getRowCount(); i++){
                            if( (int)tblTracuu.getValueAt(i, 0) == (int)madetai.getInt(1)){
                                break;
                            }
                            else if(i == (tblTracuu.getRowCount() -1) ){
                                tbModel.addRow(new Object[] {madetai.getInt(1), madetai.getString(2), madetai.getString(3), madetai.getString(4), madetai.getString(5)});
                            }
                        }
                    }
                }
                
                
            }
            KetNoi.con.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void txtTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimActionPerformed
        btnTimActionPerformed(evt);
    }//GEN-LAST:event_txtTimActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        MainPage m = new MainPage();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    
    public String linkBC( String s){
        if( "null".equals(s)){
            return "No file";
        }
        else {
            String [] link = (s.replace("\\", "*")).split("[*]");
            return link[link.length - 1];
        }
    } 
     
    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
        int row = tblTracuu.getSelectedRow();
        Object id = tblTracuu.getValueAt(row,0);
        kn.KN();
        ResultSet r = null;
        try {
            r = KetNoi.s.executeQuery("Select Distinct tenDT, linkBC, loaiDT, hocKi, namHoc from DETAI, DIEM where DETAI.maDT = DIEM.maDT and DETAI.maDT = "+id+"");
            
            ChiTiet c = new ChiTiet();
            if(r.next()){  
                c.Path = r.getString(2);
                c.txtTendetai.setText(r.getString(1));
                c.btnXemtep.setText(linkBC((String)r.getString(2)));
                c.txtLoai.setText(r.getString(3));
                c.txtHocky.setText(r.getString(4));
                c.txtNamhoc.setText(r.getString(5));
            }
            KetNoi.con.close();
            data.DataSinhvien((int)id, c.tblSinhvien);
            data.DataCanbo((int)id, c.tblDiem);
            data.DataTinhtrang((int)id, c.tblTinhtrang);
            c.maDT = (int)id;
            c.setVisible(true);
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_btnXemActionPerformed

    private void tblTracuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTracuuMouseClicked
        if(tblTracuu.getValueAt(0, 0) != null){
            btnXem.setEnabled(true);
        }
    }//GEN-LAST:event_tblTracuuMouseClicked


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TraCuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TraCuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TraCuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TraCuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TraCuu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXem;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JScrollPane pnlLogo;
    private javax.swing.JPanel pnlTracuu;
    public javax.swing.JTable tblTracuu;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
